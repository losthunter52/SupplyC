package controller.view;

import java.net.URL;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import controller.facade.ControlePedidosFacade;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import model.Pedido;

@SuppressWarnings("rawtypes")
public class controlePedidosController implements Initializable {
	@FXML
	private TableView tablePedidos;
	@FXML
	private TableColumn columnId;
	@FXML
	private TableColumn columnStatus;
	@FXML
	private TableColumn columnEmpresa;
	@FXML
	private TableColumn columnData;
	@FXML
	private TableColumn columnTipo;
	@FXML
	private ComboBox boxTipoPedido;
	@FXML
	private DatePicker dataPicker;
	@FXML
	private Button btnCriar;
	@FXML
	private Button btnExcluir;
	@FXML
	private TextField txtStatus;

	private int idGrupoPedido = 1;
	private Boolean alterar = false;
	private ControlePedidosFacade controlePedidosFacade = new ControlePedidosFacade();

	@SuppressWarnings("unchecked")
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		boxTipoPedido.getItems().addAll("Quinzenal", "Semanal", "Mensal");
		clear();
		dataPicker.setValue(LocalDate.now());
		tablePedidos.setItems(atualizarTabela());
		columnId.setCellValueFactory(new PropertyValueFactory<Pedido, Integer>("idPedido"));
		columnStatus.setCellValueFactory(new PropertyValueFactory<Pedido, String>("status"));
		columnEmpresa.setCellValueFactory(new PropertyValueFactory<Pedido, Integer>("empresa_idEmpresa"));
		columnData.setCellValueFactory(new PropertyValueFactory<Pedido, String>("data"));
		columnTipo.setCellValueFactory(new PropertyValueFactory<Pedido, Integer>("grupoPedido_idGrupoPedido"));

	}

	@SuppressWarnings("unchecked")
	public void clear() {
		idGrupoPedido = 1;
		boxTipoPedido.setValue("Quinzenal");
		alterar = false;
		txtStatus.clear();
		dataPicker.setValue(LocalDate.now());
	}

	public ObservableList<Pedido> atualizarTabela() {
		clear();
		return controlePedidosFacade.atualizarLista();
	}

	@SuppressWarnings("unchecked")
	public void atualizar() {
		tablePedidos.setItems(atualizarTabela());
	}
	
	public String grupoPedido(int i) {
		if (i == 1) {
			return "Quinzenal";
		}
		if (i == 2) {
			return "Semanal";
		}
		if (i == 3) {
			return "Mensal";
		}
		return "";
	}

	// Event Listener on TableView[#tablePedidos].onKeyPressed
	@FXML
	public void tablePedidosKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			Pedido pedido = controlePedidosFacade.selecionarIndice(tablePedidos.getSelectionModel().getSelectedIndex());
			dataPicker.setValue(pedido.getData().toLocalDate());
			grupoPedido(pedido.getGrupoPedido_idGrupoPedido());
			idGrupoPedido = pedido.getGrupoPedido_idGrupoPedido();
			txtStatus.setText(pedido.getStatus());
			alterar = true;
		}

	}

	@FXML
	public void txtStatusKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			btnCriar.requestFocus();
		}

	}

	// Event Listener on TableView[#tablePedidos].onMouseClicked
	@SuppressWarnings("unchecked")
	@FXML
	public void tablePedidosMouseClicked(MouseEvent event) {
		// TODO Autogenerated
		if (tablePedidos.getSelectionModel().getSelectedIndex() >= 0) {
			Pedido pedido = controlePedidosFacade.selecionarIndice(tablePedidos.getSelectionModel().getSelectedIndex());
			dataPicker.setValue(pedido.getData().toLocalDate());
			boxTipoPedido.setValue(grupoPedido(pedido.getGrupoPedido_idGrupoPedido()));
			idGrupoPedido = pedido.getGrupoPedido_idGrupoPedido();
			txtStatus.setText(pedido.getStatus());
			alterar = true;
		}
	}

	// Event Listener on ComboBox[#boxTipoPedido].onAction
	@FXML
	public void boxTipoPedidoClicked(ActionEvent event) {
		// TODO Autogenerated
		if (boxTipoPedido.getValue().equals("Quinzenal")) {
			idGrupoPedido = 1;
		}
		if (boxTipoPedido.getValue().equals("Semanal")) {
			idGrupoPedido = 2;
		}
		if (boxTipoPedido.getValue().equals("Mensal")) {
			idGrupoPedido = 3;
		}
	}

	// Event Listener on Button[#btnCriar].onAction
	@FXML
	public void btnCriarClicked(ActionEvent event) {
		// TODO Autogenerated
		if (alterar) {
			if (dataPicker.getValue() == null) {
				JOptionPane.showMessageDialog(null, "O campo Data nao pode ser vazio");
			} else {
				java.util.Date date = Date
						.from(dataPicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
				java.sql.Date sqlDate = new java.sql.Date(date.getTime());
				if (txtStatus.getText().isEmpty()) {
					controlePedidosFacade.alterarCriar(tablePedidos.getSelectionModel().getSelectedIndex(), idGrupoPedido,
							sqlDate);
					atualizarTabela();
				} else {
					controlePedidosFacade.alterar(tablePedidos.getSelectionModel().getSelectedIndex(), idGrupoPedido,
							sqlDate, txtStatus.getText());
					atualizarTabela();
				}
			}
			alterar = false;
		} else {
			if (!alterar) {
				if (dataPicker.getValue() == null) {
					JOptionPane.showMessageDialog(null, "O campo Data nao pode ser vazio");
				} else {
					java.util.Date date = Date
							.from(dataPicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
					java.sql.Date sqlDate = new java.sql.Date(date.getTime());
					if (txtStatus.getText().isEmpty()) {
						controlePedidosFacade.salvarCriar(idGrupoPedido, sqlDate);
						atualizarTabela();
					} else {
						controlePedidosFacade.salvar(idGrupoPedido, sqlDate, txtStatus.getText());
						atualizarTabela();
					}
				}
			}
		}
		atualizar();
	}

	// Event Listener on Button[#btnCriar].onKeyPressed
	@FXML
	public void btnCriarKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			if (alterar) {
				if (dataPicker.getValue() == null) {
					JOptionPane.showMessageDialog(null, "O campo Data nao pode ser vazio");
				} else {
					java.util.Date date = Date
							.from(dataPicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
					java.sql.Date sqlDate = new java.sql.Date(date.getTime());
					if (txtStatus.getText().isEmpty()) {
						controlePedidosFacade.alterarCriar(tablePedidos.getSelectionModel().getSelectedIndex(),
								idGrupoPedido, sqlDate);
						atualizarTabela();
					} else {
						controlePedidosFacade.alterar(tablePedidos.getSelectionModel().getSelectedIndex(),
								idGrupoPedido, sqlDate, txtStatus.getText());
						atualizarTabela();
					}
				}
				alterar = false;
			} else {
				if (!alterar) {
					if (dataPicker.getValue() == null) {
						JOptionPane.showMessageDialog(null, "O campo Data nao pode ser vazio");
					} else {
						java.util.Date date = Date
								.from(dataPicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
						java.sql.Date sqlDate = new java.sql.Date(date.getTime());
						if (txtStatus.getText().isEmpty()) {
							controlePedidosFacade.salvarCriar(idGrupoPedido, sqlDate);
							atualizarTabela();
						} else {
							controlePedidosFacade.salvar(idGrupoPedido, sqlDate, txtStatus.getText());
							atualizarTabela();
						}
					}
				}
			}
			atualizar();
		}
	}

	// Event Listener on Button[#btnExcluir].onAction
	@FXML
	public void btnExcluirClicked(ActionEvent event) {
		// TODO Autogenerated
		if (alterar) {
			java.util.Date date = Date.from(dataPicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
			java.sql.Date sqlDate = new java.sql.Date(date.getTime());
			controlePedidosFacade.excluir(tablePedidos.getSelectionModel().getSelectedIndex(), idGrupoPedido, sqlDate);
			atualizarTabela();
		}
		atualizar();
	}
}
