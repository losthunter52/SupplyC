package controller.view;

import java.net.URL;
import java.util.ResourceBundle;

import javax.swing.JOptionPane;

import controller.facade.ControleUsuarioFacade;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.MouseEvent;
import model.UsuarioJoinEmpresa;

@SuppressWarnings("rawtypes")
public class controleUsuarioController implements Initializable {
	@FXML
	private TableView tableUsuarioJoinEmpresa;
	@FXML
	private TableColumn columnEmpresa;
	@FXML
	private TableColumn columnLogin;
	@FXML
	private TableColumn columnSenha;
	@FXML
	private Button btnSalvar;
	@FXML
	private Button btnExcluir;
	@FXML
	private TextField txtEmpresa;
	@FXML
	private TextField txtLogin;
	@FXML
	private PasswordField txtSenha;
	@FXML
	private ComboBox boxPapel;

	private Boolean isAdmin = false;
	private Boolean alterar = false;
	private String papel = "user";
	private String aux;
	private ControleUsuarioFacade controleUsuarioFacade = new ControleUsuarioFacade();

	@SuppressWarnings("unchecked")
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		boxPapel.getItems().addAll("admin", "user");
		boxPapel.setValue("user");
		tableUsuarioJoinEmpresa.setItems(atualizarTabela());
		columnEmpresa.setCellValueFactory(new PropertyValueFactory<UsuarioJoinEmpresa, String>("descricao"));
		columnLogin.setCellValueFactory(new PropertyValueFactory<UsuarioJoinEmpresa, String>("login"));
		columnSenha.setCellValueFactory(new PropertyValueFactory<UsuarioJoinEmpresa, String>("senha"));
	}

	@SuppressWarnings("unchecked")
	private void clear() {
		if (papel.equals("user")) {
			txtEmpresa.setText("");
		} else {
			boxPapel.setValue("admin");
		}
		txtLogin.setText("");
		txtSenha.setText("");
	}

	private ObservableList<UsuarioJoinEmpresa> atualizarTabela() {
		clear();
		return controleUsuarioFacade.atualizarLista();

	}

	// Event Listener on TextField[#txtEmpresa].onKeyPressed
	@FXML
	public void txtEmpresaKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			txtLogin.requestFocus();
		}
	}

	// Event Listener on TableView[#tableUsuarioJoinEmpresa].onKeyPressed
	@SuppressWarnings("unchecked")
	@FXML
	public void tableUsuarioJoinEmpresaKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			UsuarioJoinEmpresa user = controleUsuarioFacade
					.selecionarIndice(tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex());
			txtLogin.setText(user.getLogin());
			txtSenha.setText("");
			boxPapel.setValue(user.getPapel());
			txtEmpresa.setText(user.getDescricao());
			alterar = true;
		}
	}

	// Event Listener on TableView[#tableUsuarioJoinEmpresa].onMouseClicked
	@SuppressWarnings("unchecked")
	@FXML
	public void tableUsuarioJoinEmpresaClicked(MouseEvent event) {
		// TODO Autogenerated
		if (tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex() >= 0) {
			UsuarioJoinEmpresa user = controleUsuarioFacade
					.selecionarIndice(tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex());
			txtLogin.setText(user.getLogin());
			txtSenha.setText("");
			boxPapel.setValue(user.getPapel());
			txtEmpresa.setText(user.getDescricao());
			alterar = true;
		}
	}

	// Event Listener on Button[#btnSalvar].onAction
	@FXML
	public void btnSalvarClicked(ActionEvent event) {
		// TODO Autogenerated
		if (txtEmpresa.getText().isEmpty()) {
			JOptionPane.showMessageDialog(null, "O campo Empresa não pode estar vazio");
			txtEmpresa.requestFocus();
		} else {
			if (txtLogin.getText().isEmpty()) {
				JOptionPane.showMessageDialog(null, "O campo Login não pode estar vazio");
				txtLogin.requestFocus();
			} else {
				if (txtSenha.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "O campo Senha não pode estar vazio");
					txtSenha.requestFocus();
				} else {
					if (alterar) {
						controleUsuarioFacade.alterar(isAdmin,
								tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex(), txtEmpresa.getText(),
								(String) boxPapel.getValue(), txtLogin.getText(), txtSenha.getText());
						atualizarTabela();
						alterar = false;

					}
					if (!alterar) {
						controleUsuarioFacade.salvar(isAdmin, txtEmpresa.getText(), papel, txtLogin.getText(),
								txtSenha.getText());
						atualizarTabela();
					}
				}
			}
		}
	}

	// Event Listener on Button[#btnSalvar].onKeyPressed
	@FXML
	public void btnSalvarKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			if (txtEmpresa.getText().isEmpty()) {
				JOptionPane.showMessageDialog(null, "O campo Empresa não pode estar vazio");
				txtEmpresa.requestFocus();
			} else {
				if (txtLogin.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "O campo Login não pode estar vazio");
					txtLogin.requestFocus();
				} else {
					if (txtSenha.getText().isEmpty()) {
						JOptionPane.showMessageDialog(null, "O campo Senha não pode estar vazio");
						txtSenha.requestFocus();
					} else {
						if (alterar) {
							controleUsuarioFacade.alterar(isAdmin,
									tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex(),
									txtEmpresa.getText(), (String) boxPapel.getValue(), txtLogin.getText(),
									txtSenha.getText());
							atualizarTabela();
							alterar = false;

						}
						if (!alterar) {
							controleUsuarioFacade.salvar(isAdmin, txtEmpresa.getText(), (String) boxPapel.getValue(),
									txtLogin.getText(), txtSenha.getText());
							atualizarTabela();
						}
					}
				}
			}
		}
	}

	// Event Listener on Button[#btnExcluir].onAction
	@FXML
	public void btnExcluirClicked(ActionEvent event) {
		if (tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex() >= 0) {
			if (alterar) {
				controleUsuarioFacade.excluir(isAdmin, tableUsuarioJoinEmpresa.getSelectionModel().getSelectedIndex(),
						txtEmpresa.getText(), (String) boxPapel.getValue(), txtLogin.getText(), txtSenha.getText());
				atualizarTabela();
				alterar = false;
			}
		}
	}

	// Event Listener on TextField[#txtLogin].onKeyPressed
	@FXML
	public void txtLoginKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			txtSenha.requestFocus();
		}
	}

	// Event Listener on PasswordField[#txtSenha].onKeyPressed
	@FXML
	public void txtSenhaKeyPressed(KeyEvent event) {
		// TODO Autogenerated
		if (event.getCode() == KeyCode.ENTER) {
			btnSalvar.requestFocus();
		}
	}

	// Event Listener on ComboBox[#boxPapel].onAction
	@FXML
	public void boxPapelClicked(ActionEvent event) {
		// TODO Autogenerated
		if (boxPapel.getValue().equals("admin")) {
			aux = txtEmpresa.getText();
			txtEmpresa.setText("admin");
			txtEmpresa.setDisable(true);
			papel = "admin";
			isAdmin = true;
		} else {
			txtEmpresa.setText(aux);
			txtEmpresa.setDisable(false);
			papel = "user";
			isAdmin = false;
		}

	}
}
